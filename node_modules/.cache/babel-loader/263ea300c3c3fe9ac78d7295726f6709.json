{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\n\nfunction useHttp() {\n  _s();\n\n  var response = null;\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  function resetError() {\n    setError(null);\n  }\n\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error(requestConfig.errorMsg);\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || requestConfig.errorMsg);\n    }\n\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading: isLoading,\n    error: error,\n    response: response.json(),\n    sendRequest: sendRequest,\n    resetError: resetError\n  };\n}\n\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\n\nexport default useHttp;","map":{"version":3,"sources":["D:/React JS/space-ticket-booking-app/src/hooks/use-http.js"],"names":["useState","useCallback","useHttp","response","isLoading","setIsLoading","error","setError","resetError","sendRequest","requestConfig","applyData","fetch","url","method","headers","body","JSON","stringify","ok","Error","errorMsg","data","json","err","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,MAAIC,QAAQ,GAAG,IAAf;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;;AAEA,WAASQ,UAAT,GAAqB;AACnBD,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AAED,QAAME,WAAW,GAAGR,WAAW,CAAC,OAAOS,aAAP,EAAsBC,SAAtB,KAAoC;AAClEN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACFJ,MAAAA,QAAQ,GAAG,MAAMS,KAAK,CAACF,aAAa,CAACG,GAAf,EAAoB;AACxCC,QAAAA,MAAM,EAAEJ,aAAa,CAACI,MAAd,GAAuBJ,aAAa,CAACI,MAArC,GAA8C,KADd;AAExCC,QAAAA,OAAO,EAAEL,aAAa,CAACK,OAAd,GAAwBL,aAAa,CAACK,OAAtC,GAAgD,EAFjB;AAGxCC,QAAAA,IAAI,EAAEN,aAAa,CAACM,IAAd,GAAqBC,IAAI,CAACC,SAAL,CAAeR,aAAa,CAACM,IAA7B,CAArB,GAA0D;AAHxB,OAApB,CAAtB;;AAMA,UAAI,CAACb,QAAQ,CAACgB,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAUV,aAAa,CAACW,QAAxB,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMnB,QAAQ,CAACoB,IAAT,EAAnB;AACAZ,MAAAA,SAAS,CAACW,IAAD,CAAT;AACD,KAbD,CAaE,OAAOE,GAAP,EAAY;AACZjB,MAAAA,QAAQ,CAACiB,GAAG,CAACC,OAAJ,IAAef,aAAa,CAACW,QAA9B,CAAR;AACD;;AACDhB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GApB8B,EAoB5B,EApB4B,CAA/B;AAsBA,SAAO;AACLD,IAAAA,SAAS,EAAEA,SADN;AAELE,IAAAA,KAAK,EAAEA,KAFF;AAGLH,IAAAA,QAAQ,EAAEA,QAAQ,CAACoB,IAAT,EAHL;AAILd,IAAAA,WAAW,EAAEA,WAJR;AAKLD,IAAAA,UAAU,EAAEA;AALP,GAAP;AAOD;;GAtCQN,O;;AAuCT,eAAeA,OAAf","sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\nfunction useHttp() {\r\n  var response = null;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  function resetError(){\r\n    setError(null);\r\n  }\r\n\r\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method ? requestConfig.method : \"GET\",\r\n        headers: requestConfig.headers ? requestConfig.headers : {},\r\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(requestConfig.errorMsg);\r\n      }\r\n\r\n      const data = await response.json();\r\n      applyData(data);\r\n    } catch (err) {\r\n      setError(err.message || requestConfig.errorMsg);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return {\r\n    isLoading: isLoading,\r\n    error: error,\r\n    response: response.json(),\r\n    sendRequest: sendRequest,\r\n    resetError: resetError,\r\n  };\r\n}\r\nexport default useHttp;\r\n"]},"metadata":{},"sourceType":"module"}