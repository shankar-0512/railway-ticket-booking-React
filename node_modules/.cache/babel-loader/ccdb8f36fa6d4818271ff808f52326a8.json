{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\space-ticket-booking-app\\\\src\\\\components\\\\Ticket Booking\\\\MyBookings.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Tickets from \"./Tickets\";\nimport classes from \"./MyBooking.module.css\";\nimport Layout from \"../layout/Layout\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport TicketList from \"./TicketList\";\nimport Modal from \"../UI/Modal\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ticketId = null;\n\nfunction MyBookings() {\n  _s();\n\n  const {\n    isLoading: bookingIsLoading,\n    error: bookingError,\n    sendRequest: sendBookingRequest,\n    response: bookingResponse,\n    resetError: resetBookingResponse,\n    resetResponse: resetBookingError\n  } = useHttp();\n  const [showCancellationPrompt, setShowCancellationPrompt] = useState(false);\n\n  function onTicketCancelHandler(id) {\n    ticketId = id;\n    setShowCancellationPrompt(true);\n  }\n\n  const userEmail = useSelector(state => state.login.userId); //Request to backend for bookings data\n\n  const fetchBookingDetails = async requestJson => {\n    sendBookingRequest({\n      url: \"http://localhost:8080/api/protected/fetchBookingDetails\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        userEmail: requestJson.userEmail\n      },\n      errorMsg: \"Request failed!\"\n    });\n  };\n\n  useEffect(() => {\n    const requestJson = {\n      userEmail\n    };\n    fetchBookingDetails(requestJson);\n  }, []);\n\n  function cancellationHandler() {}\n\n  function closeTicketCancelModal() {\n    setShowCancellationPrompt(false);\n  }\n\n  const ticketCancelModalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: classes.btn,\n      onClick: cancellationHandler,\n      children: \"Yes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.btn,\n      onClick: closeTicketCancelModal,\n      children: \"No\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n\n  const ticketCancelModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Are you sure? You will be refunded within 5-7 days.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [showCancellationPrompt && /*#__PURE__*/_jsxDEV(Modal, {\n      children: [ticketCancelModalContent, ticketCancelModalActions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TicketList, {\n      bookingList: bookingResponse,\n      cancellationHandler: onTicketCancelHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyBookings, \"xvBWRcyAX8TsRu/xmK+8VxTxN7A=\", false, function () {\n  return [useHttp, useSelector];\n});\n\n_c = MyBookings;\nexport default MyBookings;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyBookings\");","map":{"version":3,"sources":["D:/React JS/space-ticket-booking-app/src/components/Ticket Booking/MyBookings.js"],"names":["React","Tickets","classes","Layout","useSelector","useEffect","useState","useHttp","TicketList","Modal","Button","ticketId","MyBookings","isLoading","bookingIsLoading","error","bookingError","sendRequest","sendBookingRequest","response","bookingResponse","resetError","resetBookingResponse","resetResponse","resetBookingError","showCancellationPrompt","setShowCancellationPrompt","onTicketCancelHandler","id","userEmail","state","login","userId","fetchBookingDetails","requestJson","url","method","headers","body","errorMsg","cancellationHandler","closeTicketCancelModal","ticketCancelModalActions","actions","btn","ticketCancelModalContent","total"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Tickets from \"./Tickets\";\r\nimport classes from \"./MyBooking.module.css\";\r\nimport Layout from \"../layout/Layout\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport TicketList from \"./TicketList\";\r\nimport Modal from \"../UI/Modal\";\r\nimport Button from \"../UI/Button/Button\";\r\n\r\nvar ticketId = null;\r\nfunction MyBookings() {\r\n  const {\r\n    isLoading: bookingIsLoading,\r\n    error: bookingError,\r\n    sendRequest: sendBookingRequest,\r\n    response: bookingResponse,\r\n    resetError: resetBookingResponse,\r\n    resetResponse: resetBookingError,\r\n  } = useHttp();\r\n\r\n  const [showCancellationPrompt, setShowCancellationPrompt] = useState(false);\r\n\r\n  function onTicketCancelHandler(id) {\r\n    ticketId = id;\r\n    setShowCancellationPrompt(true);\r\n  }\r\n\r\n  const userEmail = useSelector((state) => state.login.userId);\r\n\r\n  //Request to backend for bookings data\r\n  const fetchBookingDetails = async (requestJson) => {\r\n    sendBookingRequest({\r\n      url: \"http://localhost:8080/api/protected/fetchBookingDetails\",\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: {\r\n        userEmail: requestJson.userEmail,\r\n      },\r\n      errorMsg: \"Request failed!\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const requestJson = { userEmail };\r\n    fetchBookingDetails(requestJson);\r\n  }, []);\r\n\r\n  function cancellationHandler(){\r\n\r\n  }\r\n\r\n  function closeTicketCancelModal(){\r\n    setShowCancellationPrompt(false);\r\n  }\r\n\r\n  const ticketCancelModalActions = (\r\n    <div className={classes.actions}>\r\n      <Button className={classes.btn} onClick={cancellationHandler}>\r\n        Yes\r\n      </Button>\r\n      <Button className={classes.btn} onClick={closeTicketCancelModal}>\r\n        No\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  const ticketCancelModalContent = (\r\n    <React.Fragment>\r\n      <div className={classes.total}>\r\n        <span>Are you sure? You will be refunded within 5-7 days.</span>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      {showCancellationPrompt && (\r\n        <Modal>\r\n          {ticketCancelModalContent}\r\n          {ticketCancelModalActions}\r\n        </Modal>\r\n      )}\r\n      <TicketList\r\n        bookingList={bookingResponse}\r\n        cancellationHandler={onTicketCancelHandler}\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\nexport default MyBookings;\r\n"]},"metadata":{},"sourceType":"module"}