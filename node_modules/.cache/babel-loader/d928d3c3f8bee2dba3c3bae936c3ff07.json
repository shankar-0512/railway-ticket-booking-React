{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\space-ticket-booking-app\\\\src\\\\components\\\\Authentication\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useRef, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { loginActions } from \"../../store/login-slice\";\nimport Card from \"../UI/Card/Card\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../CommonInput/Input\";\nimport classes from \"./Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction emailReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n}\n\nfunction passwordReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n}\n\nfunction Login() {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef(); //checking for form validity every 500ms\n\n  useEffect(function () {\n    const identifier = setTimeout(() => {\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 500);\n    return function clearTimer() {\n      clearTimeout(identifier);\n    };\n  }, //use effect dependencies - will re run every time below dependencies change.\n  //Therefore useffect is guaranteed to use the latest state.\n  [emailState.isValid, passwordState.isValid]);\n\n  function emailChangeHandler(event) {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  }\n\n  function validateEmailHandler() {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  }\n\n  function passwordChangeHandler(event) {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  }\n\n  function validatePasswordHandler() {\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    });\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n    console.log(\"SUBMIT HANDLER\");\n  } //DUMMY STATE\n\n\n  const emailValid = true;\n  const passwordValid = true;\n  const emailValue = \"Hi\";\n  const passwordValue = \"Bye\";\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isValid: emailValid,\n        value: emailValue,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordValid,\n        value: passwordValue,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.action,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"vRaXSOiiGrkfEKg2enJx+aFAEUY=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/React JS/space-ticket-booking-app/src/components/Authentication/Login.js"],"names":["useReducer","useRef","useEffect","useState","useDispatch","loginActions","Card","Button","Input","classes","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailInputRef","passwordInputRef","identifier","setTimeout","clearTimer","clearTimeout","emailChangeHandler","event","target","validateEmailHandler","passwordChangeHandler","validatePasswordHandler","submitHandler","preventDefault","console","log","emailValid","passwordValid","emailValue","passwordValue","login","btn"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACG,GAAhB;AAAqBC,MAAAA,OAAO,EAAEJ,MAAM,CAACG,GAAP,CAAWE,QAAX,CAAoB,GAApB;AAA9B,KAAP;AACD;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAf;AAAsBE,MAAAA,OAAO,EAAEL,KAAK,CAACG,KAAN,CAAYG,QAAZ,CAAqB,GAArB;AAA/B,KAAP;AACD;;AAED,SAAO;AAAEH,IAAAA,KAAK,EAAE,EAAT;AAAaE,IAAAA,OAAO,EAAE;AAAtB,GAAP;AACD;;AAED,SAASE,eAAT,CAAyBP,KAAzB,EAAgCC,MAAhC,EAAwC;AACtC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACG,GAAhB;AAAqBC,MAAAA,OAAO,EAAEJ,MAAM,CAACG,GAAP,CAAWI,IAAX,GAAkBC,MAAlB,GAA2B;AAAzD,KAAP;AACD;;AACD,MAAIR,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAf;AAAsBE,MAAAA,OAAO,EAAEL,KAAK,CAACG,KAAN,CAAYK,IAAZ,GAAmBC,MAAnB,GAA4B;AAA3D,KAAP;AACD;;AAED,SAAO;AAAEN,IAAAA,KAAK,EAAE,EAAT;AAAaE,IAAAA,OAAO,EAAE;AAAtB,GAAP;AACD;;AAED,SAASK,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BzB,UAAU,CAACU,YAAD,EAAe;AAC3DI,IAAAA,KAAK,EAAE,EADoD;AAE3DE,IAAAA,OAAO,EAAE;AAFkD,GAAf,CAA9C;AAKA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoC3B,UAAU,CAACkB,eAAD,EAAkB;AACpEJ,IAAAA,KAAK,EAAE,EAD6D;AAEpEE,IAAAA,OAAO,EAAE;AAF2D,GAAlB,CAApD;AAKA,QAAMY,aAAa,GAAG3B,MAAM,EAA5B;AACA,QAAM4B,gBAAgB,GAAG5B,MAAM,EAA/B,CAde,CAgBf;;AACAC,EAAAA,SAAS,CACP,YAAY;AACV,UAAM4B,UAAU,GAAGC,UAAU,CAAC,MAAM;AAClCR,MAAAA,cAAc,CAACC,UAAU,CAACR,OAAX,IAAsBU,aAAa,CAACV,OAArC,CAAd;AACD,KAF4B,EAE1B,GAF0B,CAA7B;AAIA,WAAO,SAASgB,UAAT,GAAsB;AAC3BC,MAAAA,YAAY,CAACH,UAAD,CAAZ;AACD,KAFD;AAGD,GATM,EAUP;AACA;AACA,GAACN,UAAU,CAACR,OAAZ,EAAqBU,aAAa,CAACV,OAAnC,CAZO,CAAT;;AAcA,WAASkB,kBAAT,CAA4BC,KAA5B,EAAmC;AACjCV,IAAAA,aAAa,CAAC;AAAEZ,MAAAA,IAAI,EAAE,YAAR;AAAsBE,MAAAA,GAAG,EAAEoB,KAAK,CAACC,MAAN,CAAatB;AAAxC,KAAD,CAAb;AACD;;AACD,WAASuB,oBAAT,GAAgC;AAC9BZ,IAAAA,aAAa,CAAC;AAAEZ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAb;AACD;;AACD,WAASyB,qBAAT,CAA+BH,KAA/B,EAAsC;AACpCR,IAAAA,gBAAgB,CAAC;AAAEd,MAAAA,IAAI,EAAE,YAAR;AAAsBE,MAAAA,GAAG,EAAEoB,KAAK,CAACC,MAAN,CAAatB;AAAxC,KAAD,CAAhB;AACD;;AACD,WAASyB,uBAAT,GAAmC;AACjCZ,IAAAA,gBAAgB,CAAC;AAAEd,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAhB;AACD;;AACD,WAAS2B,aAAT,CAAuBL,KAAvB,EAA8B;AAC5BA,IAAAA,KAAK,CAACM,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,GA9Cc,CAgDf;;;AACA,QAAMC,UAAU,GAAG,IAAnB;AACA,QAAMC,aAAa,GAAG,IAAtB;AACA,QAAMC,UAAU,GAAG,IAAnB;AACA,QAAMC,aAAa,GAAG,KAAtB;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEtC,OAAO,CAACuC,KAAzB;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAER,aAAhB;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,GAAG,EAAEZ,aADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,KAAK,EAAC,QAHR;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,OAAO,EAAEgB,UALX;AAME,QAAA,KAAK,EAAEE,UANT;AAOE,QAAA,QAAQ,EAAEZ,kBAPZ;AAQE,QAAA,MAAM,EAAEG;AARV;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,KAAD;AACE,QAAA,GAAG,EAAER,gBADP;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,QAAA,KAAK,EAAC,UAHR;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,OAAO,EAAEgB,aALX;AAME,QAAA,KAAK,EAAEE,aANT;AAOE,QAAA,QAAQ,EAAET,qBAPZ;AAQE,QAAA,MAAM,EAAEC;AARV;AAAA;AAAA;AAAA;AAAA,cAXF,eAsBE;AAAK,QAAA,SAAS,EAAE9B,OAAO,CAACG,MAAxB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAEH,OAAO,CAACwC,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GAtFQ5B,K;;KAAAA,K;AAwFT,eAAeA,KAAf","sourcesContent":["import { useReducer, useRef, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginActions } from \"../../store/login-slice\";\r\nimport Card from \"../UI/Card/Card\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport Input from \"../CommonInput/Input\";\r\nimport classes from \"./Login.module.css\";\r\n\r\nfunction emailReducer(state, action) {\r\n  if (action.type === \"USER_INPUT\") {\r\n    return { value: action.val, isValid: action.val.includes(\"@\") };\r\n  }\r\n  if (action.type === \"INPUT_BLUR\") {\r\n    return { value: state.value, isValid: state.value.includes(\"@\") };\r\n  }\r\n\r\n  return { value: \"\", isValid: false };\r\n}\r\n\r\nfunction passwordReducer(state, action) {\r\n  if (action.type === \"USER_INPUT\") {\r\n    return { value: action.val, isValid: action.val.trim().length > 6 };\r\n  }\r\n  if (action.type === \"INPUT_BLUR\") {\r\n    return { value: state.value, isValid: state.value.trim().length > 6 };\r\n  }\r\n\r\n  return { value: \"\", isValid: false };\r\n}\r\n\r\nfunction Login() {\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\r\n    value: \"\",\r\n    isValid: null,\r\n  });\r\n\r\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\r\n    value: \"\",\r\n    isValid: null,\r\n  });\r\n\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  //checking for form validity every 500ms\r\n  useEffect(\r\n    function () {\r\n      const identifier = setTimeout(() => {\r\n        setFormIsValid(emailState.isValid && passwordState.isValid);\r\n      }, 500);\r\n\r\n      return function clearTimer() {\r\n        clearTimeout(identifier);\r\n      };\r\n    },\r\n    //use effect dependencies - will re run every time below dependencies change.\r\n    //Therefore useffect is guaranteed to use the latest state.\r\n    [emailState.isValid, passwordState.isValid]\r\n  );\r\n  function emailChangeHandler(event) {\r\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\r\n  }\r\n  function validateEmailHandler() {\r\n    dispatchEmail({ type: \"INPUT_BLUR\" });\r\n  }\r\n  function passwordChangeHandler(event) {\r\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\r\n  }\r\n  function validatePasswordHandler() {\r\n    dispatchPassword({ type: \"INPUT_BLUR\" });\r\n  }\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n    console.log(\"SUBMIT HANDLER\");\r\n  }\r\n\r\n  //DUMMY STATE\r\n  const emailValid = true;\r\n  const passwordValid = true;\r\n  const emailValue = \"Hi\";\r\n  const passwordValue = \"Bye\";\r\n\r\n  return (\r\n    <Card className={classes.login}>\r\n      <form onSubmit={submitHandler}>\r\n        <Input\r\n          ref={emailInputRef}\r\n          id=\"email\"\r\n          label=\"E-Mail\"\r\n          type=\"email\"\r\n          isValid={emailValid}\r\n          value={emailValue}\r\n          onChange={emailChangeHandler}\r\n          onBlur={validateEmailHandler}\r\n        />\r\n        <Input\r\n          ref={passwordInputRef}\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          isValid={passwordValid}\r\n          value={passwordValue}\r\n          onChange={passwordChangeHandler}\r\n          onBlur={validatePasswordHandler}\r\n        />\r\n\r\n        <div className={classes.action}>\r\n          <Button type=\"submit\" className={classes.btn}>\r\n            Login\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}