{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\space-ticket-booking-app\\\\src\\\\components\\\\Ticket Booking\\\\MyBookings.js\",\n    _s = $RefreshSig$();\n\nimport Tickets from \"./Tickets\";\nimport classes from \"./MyBooking.module.css\";\nimport Layout from \"../layout/Layout\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport TicketList from \"./TicketList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar bookingList = [];\n\nfunction MyBookings() {\n  _s();\n\n  const {\n    isLoading: bookingIsLoading,\n    error: bookingError,\n    sendRequest: sendBookingRequest,\n    response: bookingResponse,\n    resetError: resetBookingResponse,\n    resetResponse: resetBookingError\n  } = useHttp();\n  const userEmail = useSelector(state => state.login.userId); //Request to backend for bookings data\n\n  const fetchBookingDetails = async requestJson => {\n    sendBookingRequest({\n      url: \"http://localhost:8080/fetchBookingDetails\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        userEmail: requestJson.userEmail\n      },\n      errorMsg: \"Request failed!\"\n    });\n  };\n\n  useEffect(() => {\n    const requestJson = {\n      userEmail\n    };\n    fetchBookingDetails(requestJson);\n  }, []);\n  console.log(\"bookingResponse :\" + bookingResponse);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(TicketList, {\n      bookingList: bookingResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyBookings, \"cJn6YAmrslTj3KlQLp3WjHRHiyU=\", false, function () {\n  return [useHttp, useSelector];\n});\n\n_c = MyBookings;\nexport default MyBookings;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyBookings\");","map":{"version":3,"sources":["D:/React JS/space-ticket-booking-app/src/components/Ticket Booking/MyBookings.js"],"names":["Tickets","classes","Layout","useSelector","useEffect","useState","useHttp","TicketList","bookingList","MyBookings","isLoading","bookingIsLoading","error","bookingError","sendRequest","sendBookingRequest","response","bookingResponse","resetError","resetBookingResponse","resetResponse","resetBookingError","userEmail","state","login","userId","fetchBookingDetails","requestJson","url","method","headers","body","errorMsg","console","log"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAIC,WAAW,GAAG,EAAlB;;AACA,SAASC,UAAT,GAAsB;AAAA;;AAEpB,QAAM;AACJC,IAAAA,SAAS,EAAGC,gBADR;AAEJC,IAAAA,KAAK,EAAGC,YAFJ;AAGJC,IAAAA,WAAW,EAAEC,kBAHT;AAIJC,IAAAA,QAAQ,EAAGC,eAJP;AAKJC,IAAAA,UAAU,EAAGC,oBALT;AAMJC,IAAAA,aAAa,EAAGC;AANZ,MAOFf,OAAO,EAPX;AASA,QAAMgB,SAAS,GAAGnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,MAAxB,CAA7B,CAXoB,CAapB;;AACA,QAAMC,mBAAmB,GAAG,MAAOC,WAAP,IAAuB;AACjDZ,IAAAA,kBAAkB,CAAC;AACjBa,MAAAA,GAAG,EAAE,2CADY;AAEjBC,MAAAA,MAAM,EAAE,MAFS;AAGjBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHQ;AAMjBC,MAAAA,IAAI,EAAE;AACJT,QAAAA,SAAS,EAAEK,WAAW,CAACL;AADnB,OANW;AASjBU,MAAAA,QAAQ,EAAE;AATO,KAAD,CAAlB;AAWD,GAZD;;AAcA5B,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMuB,WAAW,GAAG;AAACL,MAAAA;AAAD,KAApB;AACAI,IAAAA,mBAAmB,CAACC,WAAD,CAAnB;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAM,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBjB,eAAlC;AAEA,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,WAAW,EAAIA;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxCQR,U;UASHH,O,EAEcH,W;;;KAXXM,U;AAyCT,eAAeA,UAAf","sourcesContent":["import Tickets from \"./Tickets\";\r\nimport classes from \"./MyBooking.module.css\";\r\nimport Layout from \"../layout/Layout\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport TicketList from \"./TicketList\";\r\n\r\nvar bookingList = [];\r\nfunction MyBookings() {\r\n\r\n  const {\r\n    isLoading : bookingIsLoading,\r\n    error : bookingError,\r\n    sendRequest: sendBookingRequest,\r\n    response : bookingResponse,\r\n    resetError : resetBookingResponse,\r\n    resetResponse : resetBookingError,\r\n  } = useHttp();\r\n\r\n  const userEmail = useSelector((state) => state.login.userId);\r\n\r\n  //Request to backend for bookings data\r\n  const fetchBookingDetails = async (requestJson) => {\r\n    sendBookingRequest({\r\n      url: \"http://localhost:8080/fetchBookingDetails\",\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: {\r\n        userEmail: requestJson.userEmail,\r\n      },\r\n      errorMsg: \"Request failed!\",\r\n    });\r\n  };\r\n\r\n  useEffect(() =>{\r\n    const requestJson = {userEmail};\r\n    fetchBookingDetails(requestJson);\r\n  }, [])\r\n\r\n  console.log(\"bookingResponse :\" + bookingResponse)\r\n\r\n  return (\r\n    <Layout>\r\n      <TicketList bookingList = {bookingResponse} />\r\n    </Layout>\r\n  );\r\n}\r\nexport default MyBookings;\r\n"]},"metadata":{},"sourceType":"module"}