{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\n\nfunction useHttp() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [response, setResponse] = useState(null);\n\n  function resetError() {\n    setError(null);\n  }\n\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error(requestConfig.errorMsg);\n      }\n\n      const data = await response.json();\n      setResponse(data);\n      applyData(data);\n    } catch (err) {\n      setError(err.message || requestConfig.errorMsg);\n    }\n\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading: isLoading,\n    error: error,\n    response: response,\n    sendRequest: sendRequest,\n    resetError: resetError\n  };\n}\n\n_s(useHttp, \"OFdSjkMokY8iJ0CF7RXjwiE26eo=\");\n\nexport default useHttp;","map":{"version":3,"sources":["D:/React JS/space-ticket-booking-app/src/hooks/use-http.js"],"names":["useState","useCallback","useHttp","isLoading","setIsLoading","error","setError","response","setResponse","resetError","sendRequest","requestConfig","applyData","fetch","url","method","headers","body","JSON","stringify","ok","Error","errorMsg","data","json","err","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;;AAEA,WAASS,UAAT,GAAqB;AACnBH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AAED,QAAMI,WAAW,GAAGT,WAAW,CAAC,OAAOU,aAAP,EAAsBC,SAAtB,KAAoC;AAClER,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMM,KAAK,CAACF,aAAa,CAACG,GAAf,EAAoB;AAC9CC,QAAAA,MAAM,EAAEJ,aAAa,CAACI,MAAd,GAAuBJ,aAAa,CAACI,MAArC,GAA8C,KADR;AAE9CC,QAAAA,OAAO,EAAEL,aAAa,CAACK,OAAd,GAAwBL,aAAa,CAACK,OAAtC,GAAgD,EAFX;AAG9CC,QAAAA,IAAI,EAAEN,aAAa,CAACM,IAAd,GAAqBC,IAAI,CAACC,SAAL,CAAeR,aAAa,CAACM,IAA7B,CAArB,GAA0D;AAHlB,OAApB,CAA5B;;AAMA,UAAI,CAACV,QAAQ,CAACa,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAUV,aAAa,CAACW,QAAxB,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMhB,QAAQ,CAACiB,IAAT,EAAnB;AACAhB,MAAAA,WAAW,CAACe,IAAD,CAAX;AACAX,MAAAA,SAAS,CAACW,IAAD,CAAT;AACD,KAdD,CAcE,OAAOE,GAAP,EAAY;AACZnB,MAAAA,QAAQ,CAACmB,GAAG,CAACC,OAAJ,IAAef,aAAa,CAACW,QAA9B,CAAR;AACD;;AACDlB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GArB8B,EAqB5B,EArB4B,CAA/B;AAuBA,SAAO;AACLD,IAAAA,SAAS,EAAEA,SADN;AAELE,IAAAA,KAAK,EAAEA,KAFF;AAGLE,IAAAA,QAAQ,EAAEA,QAHL;AAILG,IAAAA,WAAW,EAAEA,WAJR;AAKLD,IAAAA,UAAU,EAAEA;AALP,GAAP;AAOD;;GAvCQP,O;;AAwCT,eAAeA,OAAf","sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\nfunction useHttp() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [response, setResponse] = useState(null);\r\n\r\n  function resetError(){\r\n    setError(null);\r\n  }\r\n\r\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method ? requestConfig.method : \"GET\",\r\n        headers: requestConfig.headers ? requestConfig.headers : {},\r\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(requestConfig.errorMsg);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setResponse(data);\r\n      applyData(data);\r\n    } catch (err) {\r\n      setError(err.message || requestConfig.errorMsg);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return {\r\n    isLoading: isLoading,\r\n    error: error,\r\n    response: response,\r\n    sendRequest: sendRequest,\r\n    resetError: resetError,\r\n  };\r\n}\r\nexport default useHttp;\r\n"]},"metadata":{},"sourceType":"module"}