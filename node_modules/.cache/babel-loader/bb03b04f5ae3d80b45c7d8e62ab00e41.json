{"ast":null,"code":"var _jsxFileName = \"/Users/shankarnarayanan/Documents/GitHub/space-ticket-booking-React/src/components/Authentication/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useRef, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Outlet } from \"react-router-dom\";\nimport { loginActions } from \"../../store/login-slice\";\nimport Card from \"../UI/Card/Card\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../CommonInput/Input\";\nimport styles from \"../CommonInput/Input.module.css\";\nimport classes from \"./Login.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport Modal from \"../UI/Modal\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentPassword = \"\"; //************REDUCERS************//\n\nfunction emailReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isvalid: action.val.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"CLEAR\") {\n    return {\n      value: \"\",\n      isvalid: null\n    };\n  }\n\n  return {\n    value: \"\",\n    isvalid: false\n  };\n}\n\nfunction passwordReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isvalid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.trim().length > 6\n    };\n  }\n\n  if (action.type === \"CLEAR\") {\n    return {\n      value: \"\",\n      isvalid: null\n    };\n  }\n\n  return {\n    value: \"\",\n    isvalid: false\n  };\n}\n\nfunction nameReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isvalid: action.val.trim() !== \"\"\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.trim() !== \"\"\n    };\n  }\n\n  if (action.type === \"CLEAR\") {\n    return {\n      value: \"\",\n      isvalid: null\n    };\n  }\n\n  return {\n    value: \"\",\n    isvalid: false\n  };\n}\n\nfunction rePasswordReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isvalid: action.val.trim() === currentPassword.trim()\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.trim() === currentPassword.trim()\n    };\n  }\n\n  if (action.type === \"CLEAR\") {\n    return {\n      value: \"\",\n      isvalid: null\n    };\n  }\n\n  return {\n    value: \"\",\n    isvalid: false\n  };\n}\n\nfunction planetReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isvalid: action.val.trim() !== \"\"\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.trim() !== \"\"\n    };\n  }\n\n  if (action.type === \"CLEAR\") {\n    return {\n      value: \"\",\n      isvalid: null\n    };\n  }\n\n  return {\n    value: \"\",\n    isvalid: false\n  };\n}\n\nfunction dateReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isvalid: action.val.trim() !== \"\"\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.trim() !== \"\"\n    };\n  }\n\n  if (action.type === \"CLEAR\") {\n    return {\n      value: \"\",\n      isvalid: null\n    };\n  }\n\n  return {\n    value: \"\",\n    isvalid: false\n  };\n}\n\nfunction Login(props) {\n  _s();\n\n  //************DECLARATIONS************//\n  const navigate = useNavigate();\n  const dispatch = useDispatch(); //STATES\n\n  const [formisvalid, setFormisvalid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isvalid: null\n  });\n  const [nameState, dispatchName] = useReducer(nameReducer, {\n    value: \"\",\n    isvalid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isvalid: null\n  });\n  const [rePasswordState, dispatchRePassword] = useReducer(rePasswordReducer, {\n    value: \"\",\n    isvalid: null\n  });\n  const [planetState, dispatchPlanet] = useReducer(planetReducer, {\n    value: \"\",\n    isvalid: null\n  });\n  const [dateState, dispatchDate] = useReducer(dateReducer, {\n    value: \"\",\n    isvalid: null\n  }); //REFS\n\n  const nameInputRef = useRef();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const rePasswordInputRef = useRef();\n  const planetInputRef = useRef();\n  const dateInputRef = useRef();\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest,\n    response,\n    resetError,\n    resetResponse\n  } = useHttp(); //checking for form validity every 500ms\n\n  useEffect(function () {\n    const identifier = setTimeout(() => {\n      if (props.signUpFlag) {\n        setFormisvalid(nameState.isvalid && emailState.isvalid && passwordState.isvalid && rePasswordState.isvalid && planetState.isvalid && dateState.isvalid);\n      } else {\n        setFormisvalid(emailState.isvalid && passwordState.isvalid);\n      }\n    }, 200);\n    return function clearTimer() {\n      clearTimeout(identifier);\n    };\n  }, //use effect dependencies - will re run every time below dependencies change.\n  //Therefore useffect is guaranteed to use the latest state.\n  [nameState.isvalid, emailState.isvalid, passwordState.isvalid, rePasswordState.isvalid, planetState.isvalid, dateState.isvalid, props.signUpFlag, formisvalid]); //************API CALLS************//\n  //Request to backend for login and sign-up\n\n  const SignUpRequestHandler = async requestJson => {\n    sendTaskRequest({\n      url: \"https://space-ticket-booking-java.herokuapp.com/api/protected/loginAuth\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        name: requestJson.enteredName,\n        email: requestJson.enteredEmail,\n        password: requestJson.enteredPassword,\n        rePassword: requestJson.enteredRePassword,\n        dob: requestJson.enteredDate,\n        signUpF: requestJson.signUpFlag\n      },\n      errorMsg: \"Request failed!\"\n    });\n  }; //************STATE HANDLERS************//\n\n\n  function nameChangeHandler(event) {\n    dispatchName({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  }\n\n  function validateNameHandler() {\n    dispatchName({\n      type: \"INPUT_BLUR\"\n    });\n  }\n\n  function emailChangeHandler(event) {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  }\n\n  function validateEmailHandler() {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  }\n\n  function passwordChangeHandler(event) {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    currentPassword = event.target.value;\n  }\n\n  function validatePasswordHandler() {\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    });\n  }\n\n  function rePasswordChangeHandler(event) {\n    dispatchRePassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  }\n\n  function validateRePasswordHandler() {\n    dispatchRePassword({\n      type: \"INPUT_BLUR\"\n    });\n  }\n\n  function planetChangeHandler(event) {\n    dispatchPlanet({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  }\n\n  function validatePlanetHandler() {\n    dispatchPlanet({\n      type: \"INPUT_BLUR\"\n    });\n  }\n\n  function dateChangeHandler(event) {\n    dispatchDate({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  }\n\n  function validateDateHandler() {\n    dispatchDate({\n      type: \"INPUT_BLUR\"\n    });\n  } //************ACTION HANDLERS************//\n\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    if (props.signUpFlag) {\n      const enteredName = nameState.value;\n      const enteredEmail = emailState.value;\n      const enteredPassword = passwordState.value;\n      const enteredRePassword = rePasswordState.value;\n      const enteredPlanet = planetState.value;\n      const enteredDate = dateState.value;\n\n      if (formisvalid) {\n        const requestJson = {\n          enteredName,\n          enteredEmail,\n          enteredPassword,\n          enteredRePassword,\n          enteredPlanet,\n          enteredDate,\n          signUpFlag: \"Y\"\n        };\n        SignUpRequestHandler(requestJson);\n        setFormisvalid(false);\n        props.postSignUp();\n        dispatchName({\n          type: \"CLEAR\"\n        });\n        dispatchEmail({\n          type: \"CLEAR\"\n        });\n        dispatchPassword({\n          type: \"CLEAR\"\n        });\n        dispatchRePassword({\n          type: \"CLEAR\"\n        });\n        dispatchPlanet({\n          type: \"CLEAR\"\n        });\n        dispatchDate({\n          type: \"CLEAR\"\n        });\n      }\n    } else {\n      const enteredEmail = emailState.value;\n      const enteredPassword = passwordState.value;\n\n      if (formisvalid) {\n        const requestJson = {\n          enteredEmail,\n          enteredPassword,\n          signUpFlag: \"N\"\n        };\n        SignUpRequestHandler(requestJson);\n        setFormisvalid(false);\n        dispatchEmail({\n          type: \"CLEAR\"\n        });\n        dispatchPassword({\n          type: \"CLEAR\"\n        });\n      }\n    }\n  }\n\n  function closeErrorModal() {\n    resetError();\n    resetResponse();\n  }\n\n  if (response.responseCode === 0) {\n    dispatch(loginActions.LoginStateHandler());\n    dispatch(loginActions.UpdateUserId(response.userId));\n    localStorage.setItem(\"isLoggedIn\", 1);\n    localStorage.setItem(\"userId\", response.userId);\n    closeErrorModal();\n  }\n\n  useEffect(() => {\n    if (props.loginF) {\n      navigate(\"/login\");\n    }\n  }, [props.loginF, navigate]); //************MODALS************//\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.btn,\n      onClick: closeErrorModal,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n\n  const loginModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: response.responseMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this); //************LOADING SPINNERS************//\n\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: [(error || response.responseCode !== undefined) && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: props.onClose,\n      children: [loginModalContent, modalActions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [props.sessionTimeout && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error,\n        children: \"Session Expired! Please login again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this), props.signUpFlag && nameState.isvalid === false && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error,\n        children: \"Name cannot be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this), props.signUpFlag && /*#__PURE__*/_jsxDEV(Input, {\n        ref: nameInputRef,\n        id: \"name\",\n        label: \"Name\",\n        type: \"text\",\n        isvalid: nameState.isvalid,\n        value: nameState.value,\n        onChange: nameChangeHandler,\n        onBlur: validateNameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this), emailState.isvalid === false && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error,\n        children: \"Invalid E-Mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isvalid: emailState.isvalid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), passwordState.isvalid === false && props.signUpFlag && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error,\n        children: \"Password should be greater than 6 characters!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this), passwordState.isvalid === false && !props.signUpFlag && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error,\n        children: \"Invalid Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isvalid: passwordState.isvalid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), props.signUpFlag && rePasswordState.isvalid === false && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error,\n        children: \"Passwords do not match!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }, this), props.signUpFlag && /*#__PURE__*/_jsxDEV(Input, {\n        ref: rePasswordInputRef,\n        id: \"rePassword\",\n        label: \"Confirm Password\",\n        type: \"password\",\n        isvalid: rePasswordState.isvalid,\n        value: rePasswordState.value,\n        onChange: rePasswordChangeHandler,\n        onBlur: validateRePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), props.signUpFlag && dateState.isvalid === false && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error,\n        children: \"Please select your D.O.B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this), props.signUpFlag && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date of Birth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: dateInputRef,\n          id: \"date\",\n          label: \"Journey Date\",\n          type: \"date\",\n          value: dateState.value,\n          onChange: dateChangeHandler,\n          onBlur: validateDateHandler,\n          max: moment().format(\"YYYY-MM-DD\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this), !props.signUpFlag && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.action,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formisvalid && true,\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 11\n      }, this), props.signUpFlag && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.action,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formisvalid && true,\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 367,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"LhKpPKUL6QrOhI/i7oPO5IC/qP4=\", false, function () {\n  return [useNavigate, useDispatch, useHttp];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/shankarnarayanan/Documents/GitHub/space-ticket-booking-React/src/components/Authentication/Login.js"],"names":["React","useReducer","useRef","useEffect","useState","useDispatch","Outlet","loginActions","Card","Button","Input","styles","classes","useHttp","useNavigate","LoadingSpinner","Modal","moment","currentPassword","emailReducer","state","action","type","value","val","isvalid","includes","passwordReducer","trim","length","nameReducer","rePasswordReducer","planetReducer","dateReducer","Login","props","navigate","dispatch","formisvalid","setFormisvalid","emailState","dispatchEmail","nameState","dispatchName","passwordState","dispatchPassword","rePasswordState","dispatchRePassword","planetState","dispatchPlanet","dateState","dispatchDate","nameInputRef","emailInputRef","passwordInputRef","rePasswordInputRef","planetInputRef","dateInputRef","isLoading","error","sendRequest","sendTaskRequest","response","resetError","resetResponse","identifier","setTimeout","signUpFlag","clearTimer","clearTimeout","SignUpRequestHandler","requestJson","url","method","headers","body","name","enteredName","email","enteredEmail","password","enteredPassword","rePassword","enteredRePassword","dob","enteredDate","signUpF","errorMsg","nameChangeHandler","event","target","validateNameHandler","emailChangeHandler","validateEmailHandler","passwordChangeHandler","validatePasswordHandler","rePasswordChangeHandler","validateRePasswordHandler","planetChangeHandler","validatePlanetHandler","dateChangeHandler","validateDateHandler","submitHandler","preventDefault","enteredPlanet","postSignUp","closeErrorModal","responseCode","LoginStateHandler","UpdateUserId","userId","localStorage","setItem","loginF","modalActions","actions","btn","loginModalContent","total","responseMessage","login","undefined","onClose","sessionTimeout","control","format"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,IAAIC,eAAe,GAAG,EAAtB,C,CAEA;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACG,GAAhB;AAAqBC,MAAAA,OAAO,EAAEJ,MAAM,CAACG,GAAP,CAAWE,QAAX,CAAoB,GAApB;AAA9B,KAAP;AACD;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAf;AAAsBE,MAAAA,OAAO,EAAEL,KAAK,CAACG,KAAN,CAAYG,QAAZ,CAAqB,GAArB;AAA/B,KAAP;AACD;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,WAAO;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaE,MAAAA,OAAO,EAAE;AAAtB,KAAP;AACD;;AAED,SAAO;AAAEF,IAAAA,KAAK,EAAE,EAAT;AAAaE,IAAAA,OAAO,EAAE;AAAtB,GAAP;AACD;;AAED,SAASE,eAAT,CAAyBP,KAAzB,EAAgCC,MAAhC,EAAwC;AACtC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACG,GAAhB;AAAqBC,MAAAA,OAAO,EAAEJ,MAAM,CAACG,GAAP,CAAWI,IAAX,GAAkBC,MAAlB,GAA2B;AAAzD,KAAP;AACD;;AACD,MAAIR,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAf;AAAsBE,MAAAA,OAAO,EAAEL,KAAK,CAACG,KAAN,CAAYK,IAAZ,GAAmBC,MAAnB,GAA4B;AAA3D,KAAP;AACD;;AACD,MAAIR,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,WAAO;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaE,MAAAA,OAAO,EAAE;AAAtB,KAAP;AACD;;AAED,SAAO;AAAEF,IAAAA,KAAK,EAAE,EAAT;AAAaE,IAAAA,OAAO,EAAE;AAAtB,GAAP;AACD;;AAED,SAASK,WAAT,CAAqBV,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACG,GAAhB;AAAqBC,MAAAA,OAAO,EAAEJ,MAAM,CAACG,GAAP,CAAWI,IAAX,OAAsB;AAApD,KAAP;AACD;;AACD,MAAIP,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAf;AAAsBE,MAAAA,OAAO,EAAEL,KAAK,CAACG,KAAN,CAAYK,IAAZ,OAAuB;AAAtD,KAAP;AACD;;AACD,MAAIP,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,WAAO;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaE,MAAAA,OAAO,EAAE;AAAtB,KAAP;AACD;;AAED,SAAO;AAAEF,IAAAA,KAAK,EAAE,EAAT;AAAaE,IAAAA,OAAO,EAAE;AAAtB,GAAP;AACD;;AAED,SAASM,iBAAT,CAA2BX,KAA3B,EAAkCC,MAAlC,EAA0C;AACxC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AACLC,MAAAA,KAAK,EAAEF,MAAM,CAACG,GADT;AAELC,MAAAA,OAAO,EAAEJ,MAAM,CAACG,GAAP,CAAWI,IAAX,OAAsBV,eAAe,CAACU,IAAhB;AAF1B,KAAP;AAID;;AACD,MAAIP,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AACLC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KADR;AAELE,MAAAA,OAAO,EAAEL,KAAK,CAACG,KAAN,CAAYK,IAAZ,OAAuBV,eAAe,CAACU,IAAhB;AAF3B,KAAP;AAID;;AACD,MAAIP,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,WAAO;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaE,MAAAA,OAAO,EAAE;AAAtB,KAAP;AACD;;AAED,SAAO;AAAEF,IAAAA,KAAK,EAAE,EAAT;AAAaE,IAAAA,OAAO,EAAE;AAAtB,GAAP;AACD;;AAED,SAASO,aAAT,CAAuBZ,KAAvB,EAA8BC,MAA9B,EAAsC;AACpC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACG,GAAhB;AAAqBC,MAAAA,OAAO,EAAEJ,MAAM,CAACG,GAAP,CAAWI,IAAX,OAAsB;AAApD,KAAP;AACD;;AACD,MAAIP,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AACLC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KADR;AAELE,MAAAA,OAAO,EAAEL,KAAK,CAACG,KAAN,CAAYK,IAAZ,OAAuB;AAF3B,KAAP;AAID;;AACD,MAAIP,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,WAAO;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaE,MAAAA,OAAO,EAAE;AAAtB,KAAP;AACD;;AACD,SAAO;AAAEF,IAAAA,KAAK,EAAE,EAAT;AAAaE,IAAAA,OAAO,EAAE;AAAtB,GAAP;AACD;;AAED,SAASQ,WAAT,CAAqBb,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACG,GAAhB;AAAqBC,MAAAA,OAAO,EAAEJ,MAAM,CAACG,GAAP,CAAWI,IAAX,OAAsB;AAApD,KAAP;AACD;;AACD,MAAIP,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AACLC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KADR;AAELE,MAAAA,OAAO,EAAEL,KAAK,CAACG,KAAN,CAAYK,IAAZ,OAAuB;AAF3B,KAAP;AAID;;AACD,MAAIP,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,WAAO;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaE,MAAAA,OAAO,EAAE;AAAtB,KAAP;AACD;;AACD,SAAO;AAAEF,IAAAA,KAAK,EAAE,EAAT;AAAaE,IAAAA,OAAO,EAAE;AAAtB,GAAP;AACD;;AAED,SAASS,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB;AAEA,QAAMC,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMuB,QAAQ,GAAGhC,WAAW,EAA5B,CAJoB,CAMpB;;AACA,QAAM,CAACiC,WAAD,EAAcC,cAAd,IAAgCnC,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACoC,UAAD,EAAaC,aAAb,IAA8BxC,UAAU,CAACkB,YAAD,EAAe;AAC3DI,IAAAA,KAAK,EAAE,EADoD;AAE3DE,IAAAA,OAAO,EAAE;AAFkD,GAAf,CAA9C;AAKA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4B1C,UAAU,CAAC6B,WAAD,EAAc;AACxDP,IAAAA,KAAK,EAAE,EADiD;AAExDE,IAAAA,OAAO,EAAE;AAF+C,GAAd,CAA5C;AAKA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoC5C,UAAU,CAAC0B,eAAD,EAAkB;AACpEJ,IAAAA,KAAK,EAAE,EAD6D;AAEpEE,IAAAA,OAAO,EAAE;AAF2D,GAAlB,CAApD;AAKA,QAAM,CAACqB,eAAD,EAAkBC,kBAAlB,IAAwC9C,UAAU,CAAC8B,iBAAD,EAAoB;AAC1ER,IAAAA,KAAK,EAAE,EADmE;AAE1EE,IAAAA,OAAO,EAAE;AAFiE,GAApB,CAAxD;AAKA,QAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgChD,UAAU,CAAC+B,aAAD,EAAgB;AAC9DT,IAAAA,KAAK,EAAE,EADuD;AAE9DE,IAAAA,OAAO,EAAE;AAFqD,GAAhB,CAAhD;AAKA,QAAM,CAACyB,SAAD,EAAYC,YAAZ,IAA4BlD,UAAU,CAACgC,WAAD,EAAc;AACxDV,IAAAA,KAAK,EAAE,EADiD;AAExDE,IAAAA,OAAO,EAAE;AAF+C,GAAd,CAA5C,CAjCoB,CAsCpB;;AACA,QAAM2B,YAAY,GAAGlD,MAAM,EAA3B;AACA,QAAMmD,aAAa,GAAGnD,MAAM,EAA5B;AACA,QAAMoD,gBAAgB,GAAGpD,MAAM,EAA/B;AACA,QAAMqD,kBAAkB,GAAGrD,MAAM,EAAjC;AACA,QAAMsD,cAAc,GAAGtD,MAAM,EAA7B;AACA,QAAMuD,YAAY,GAAGvD,MAAM,EAA3B;AAEA,QAAM;AACJwD,IAAAA,SADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,WAAW,EAAEC,eAHT;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA;AANI,MAOFnD,OAAO,EAPX,CA9CoB,CAuDpB;;AACAV,EAAAA,SAAS,CACP,YAAY;AACV,UAAM8D,UAAU,GAAGC,UAAU,CAAC,MAAM;AAClC,UAAI/B,KAAK,CAACgC,UAAV,EAAsB;AACpB5B,QAAAA,cAAc,CACZG,SAAS,CAACjB,OAAV,IACEe,UAAU,CAACf,OADb,IAEEmB,aAAa,CAACnB,OAFhB,IAGEqB,eAAe,CAACrB,OAHlB,IAIEuB,WAAW,CAACvB,OAJd,IAKEyB,SAAS,CAACzB,OANA,CAAd;AAQD,OATD,MASO;AACLc,QAAAA,cAAc,CAACC,UAAU,CAACf,OAAX,IAAsBmB,aAAa,CAACnB,OAArC,CAAd;AACD;AACF,KAb4B,EAa1B,GAb0B,CAA7B;AAeA,WAAO,SAAS2C,UAAT,GAAsB;AAC3BC,MAAAA,YAAY,CAACJ,UAAD,CAAZ;AACD,KAFD;AAGD,GApBM,EAqBP;AACA;AACA,GACEvB,SAAS,CAACjB,OADZ,EAEEe,UAAU,CAACf,OAFb,EAGEmB,aAAa,CAACnB,OAHhB,EAIEqB,eAAe,CAACrB,OAJlB,EAKEuB,WAAW,CAACvB,OALd,EAMEyB,SAAS,CAACzB,OANZ,EAOEU,KAAK,CAACgC,UAPR,EAQE7B,WARF,CAvBO,CAAT,CAxDoB,CA2FpB;AAEA;;AACA,QAAMgC,oBAAoB,GAAG,MAAOC,WAAP,IAAuB;AAClDV,IAAAA,eAAe,CAAC;AACdW,MAAAA,GAAG,EAAE,yEADS;AAEdC,MAAAA,MAAM,EAAE,MAFM;AAGdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHK;AAMdC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEL,WAAW,CAACM,WADd;AAEJC,QAAAA,KAAK,EAAEP,WAAW,CAACQ,YAFf;AAGJC,QAAAA,QAAQ,EAAET,WAAW,CAACU,eAHlB;AAIJC,QAAAA,UAAU,EAAEX,WAAW,CAACY,iBAJpB;AAKJC,QAAAA,GAAG,EAAEb,WAAW,CAACc,WALb;AAMJC,QAAAA,OAAO,EAAEf,WAAW,CAACJ;AANjB,OANQ;AAcdoB,MAAAA,QAAQ,EAAE;AAdI,KAAD,CAAf;AAgBD,GAjBD,CA9FoB,CAiHpB;;;AAEA,WAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC9C,IAAAA,YAAY,CAAC;AAAErB,MAAAA,IAAI,EAAE,YAAR;AAAsBE,MAAAA,GAAG,EAAEiE,KAAK,CAACC,MAAN,CAAanE;AAAxC,KAAD,CAAZ;AACD;;AACD,WAASoE,mBAAT,GAA+B;AAC7BhD,IAAAA,YAAY,CAAC;AAAErB,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAZ;AACD;;AACD,WAASsE,kBAAT,CAA4BH,KAA5B,EAAmC;AACjChD,IAAAA,aAAa,CAAC;AAAEnB,MAAAA,IAAI,EAAE,YAAR;AAAsBE,MAAAA,GAAG,EAAEiE,KAAK,CAACC,MAAN,CAAanE;AAAxC,KAAD,CAAb;AACD;;AACD,WAASsE,oBAAT,GAAgC;AAC9BpD,IAAAA,aAAa,CAAC;AAAEnB,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAb;AACD;;AACD,WAASwE,qBAAT,CAA+BL,KAA/B,EAAsC;AACpC5C,IAAAA,gBAAgB,CAAC;AAAEvB,MAAAA,IAAI,EAAE,YAAR;AAAsBE,MAAAA,GAAG,EAAEiE,KAAK,CAACC,MAAN,CAAanE;AAAxC,KAAD,CAAhB;AACAL,IAAAA,eAAe,GAAGuE,KAAK,CAACC,MAAN,CAAanE,KAA/B;AACD;;AACD,WAASwE,uBAAT,GAAmC;AACjClD,IAAAA,gBAAgB,CAAC;AAAEvB,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAhB;AACD;;AACD,WAAS0E,uBAAT,CAAiCP,KAAjC,EAAwC;AACtC1C,IAAAA,kBAAkB,CAAC;AAAEzB,MAAAA,IAAI,EAAE,YAAR;AAAsBE,MAAAA,GAAG,EAAEiE,KAAK,CAACC,MAAN,CAAanE;AAAxC,KAAD,CAAlB;AACD;;AACD,WAAS0E,yBAAT,GAAqC;AACnClD,IAAAA,kBAAkB,CAAC;AAAEzB,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAlB;AACD;;AACD,WAAS4E,mBAAT,CAA6BT,KAA7B,EAAoC;AAClCxC,IAAAA,cAAc,CAAC;AAAE3B,MAAAA,IAAI,EAAE,YAAR;AAAsBE,MAAAA,GAAG,EAAEiE,KAAK,CAACC,MAAN,CAAanE;AAAxC,KAAD,CAAd;AACD;;AACD,WAAS4E,qBAAT,GAAiC;AAC/BlD,IAAAA,cAAc,CAAC;AAAE3B,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAd;AACD;;AACD,WAAS8E,iBAAT,CAA2BX,KAA3B,EAAkC;AAChCtC,IAAAA,YAAY,CAAC;AAAE7B,MAAAA,IAAI,EAAE,YAAR;AAAsBE,MAAAA,GAAG,EAAEiE,KAAK,CAACC,MAAN,CAAanE;AAAxC,KAAD,CAAZ;AACD;;AACD,WAAS8E,mBAAT,GAA+B;AAC7BlD,IAAAA,YAAY,CAAC;AAAE7B,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAZ;AACD,GAvJmB,CAyJpB;;;AAEA,WAASgF,aAAT,CAAuBb,KAAvB,EAA8B;AAC5BA,IAAAA,KAAK,CAACc,cAAN;;AAEA,QAAIpE,KAAK,CAACgC,UAAV,EAAsB;AACpB,YAAMU,WAAW,GAAGnC,SAAS,CAACnB,KAA9B;AACA,YAAMwD,YAAY,GAAGvC,UAAU,CAACjB,KAAhC;AACA,YAAM0D,eAAe,GAAGrC,aAAa,CAACrB,KAAtC;AACA,YAAM4D,iBAAiB,GAAGrC,eAAe,CAACvB,KAA1C;AACA,YAAMiF,aAAa,GAAGxD,WAAW,CAACzB,KAAlC;AACA,YAAM8D,WAAW,GAAGnC,SAAS,CAAC3B,KAA9B;;AAEA,UAAIe,WAAJ,EAAiB;AACf,cAAMiC,WAAW,GAAG;AAClBM,UAAAA,WADkB;AAElBE,UAAAA,YAFkB;AAGlBE,UAAAA,eAHkB;AAIlBE,UAAAA,iBAJkB;AAKlBqB,UAAAA,aALkB;AAMlBnB,UAAAA,WANkB;AAOlBlB,UAAAA,UAAU,EAAE;AAPM,SAApB;AAUAG,QAAAA,oBAAoB,CAACC,WAAD,CAApB;AACAhC,QAAAA,cAAc,CAAC,KAAD,CAAd;AACAJ,QAAAA,KAAK,CAACsE,UAAN;AACA9D,QAAAA,YAAY,CAAC;AAAErB,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAZ;AACAmB,QAAAA,aAAa,CAAC;AAAEnB,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAb;AACAuB,QAAAA,gBAAgB,CAAC;AAAEvB,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAhB;AACAyB,QAAAA,kBAAkB,CAAC;AAAEzB,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAlB;AACA2B,QAAAA,cAAc,CAAC;AAAE3B,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAd;AACA6B,QAAAA,YAAY,CAAC;AAAE7B,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAZ;AACD;AACF,KA7BD,MA6BO;AACL,YAAMyD,YAAY,GAAGvC,UAAU,CAACjB,KAAhC;AACA,YAAM0D,eAAe,GAAGrC,aAAa,CAACrB,KAAtC;;AAEA,UAAIe,WAAJ,EAAiB;AACf,cAAMiC,WAAW,GAAG;AAClBQ,UAAAA,YADkB;AAElBE,UAAAA,eAFkB;AAGlBd,UAAAA,UAAU,EAAE;AAHM,SAApB;AAMAG,QAAAA,oBAAoB,CAACC,WAAD,CAApB;AACAhC,QAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,QAAAA,aAAa,CAAC;AAAEnB,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAb;AACAuB,QAAAA,gBAAgB,CAAC;AAAEvB,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAhB;AACD;AACF;AACF;;AACD,WAASoF,eAAT,GAA2B;AACzB3C,IAAAA,UAAU;AACVC,IAAAA,aAAa;AACd;;AAED,MAAIF,QAAQ,CAAC6C,YAAT,KAA0B,CAA9B,EAAiC;AAC/BtE,IAAAA,QAAQ,CAAC9B,YAAY,CAACqG,iBAAb,EAAD,CAAR;AACAvE,IAAAA,QAAQ,CAAC9B,YAAY,CAACsG,YAAb,CAA0B/C,QAAQ,CAACgD,MAAnC,CAAD,CAAR;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,CAAnC;AACAD,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BlD,QAAQ,CAACgD,MAAxC;AACAJ,IAAAA,eAAe;AAChB;;AAEDvG,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgC,KAAK,CAAC8E,MAAV,EAAkB;AAChB7E,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAACD,KAAK,CAAC8E,MAAP,EAAe7E,QAAf,CAJM,CAAT,CA1NoB,CAgOpB;;AAEA,QAAM8E,YAAY,gBAChB;AAAK,IAAA,SAAS,EAAEtG,OAAO,CAACuG,OAAxB;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEvG,OAAO,CAACwG,GAA3B;AAAgC,MAAA,OAAO,EAAEV,eAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAQA,QAAMW,iBAAiB,gBACrB,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEzG,OAAO,CAAC0G,KAAxB;AAAA,6BACE;AAAA,kBAAOxD,QAAQ,CAACyD;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,CA1OoB,CAkPpB;;;AAEA,MAAI7D,SAAJ,EAAe;AACb,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAE9C,OAAO,CAAC4G,KAAzB;AAAA,eACG,CAAC7D,KAAK,IAAIG,QAAQ,CAAC6C,YAAT,KAA0Bc,SAApC,kBACC,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEtF,KAAK,CAACuF,OAAtB;AAAA,iBACGL,iBADH,EAEGH,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOE;AAAM,MAAA,QAAQ,EAAEZ,aAAhB;AAAA,iBACGnE,KAAK,CAACwF,cAAN,iBACC;AAAG,QAAA,SAAS,EAAE/G,OAAO,CAAC+C,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAIGxB,KAAK,CAACgC,UAAN,IAAoBzB,SAAS,CAACjB,OAAV,KAAsB,KAA1C,iBACC;AAAG,QAAA,SAAS,EAAEb,OAAO,CAAC+C,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,EAOGxB,KAAK,CAACgC,UAAN,iBACC,QAAC,KAAD;AACE,QAAA,GAAG,EAAEf,YADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,OAAO,EAAEV,SAAS,CAACjB,OALrB;AAME,QAAA,KAAK,EAAEiB,SAAS,CAACnB,KANnB;AAOE,QAAA,QAAQ,EAAEiE,iBAPZ;AAQE,QAAA,MAAM,EAAEG;AARV;AAAA;AAAA;AAAA;AAAA,cARJ,EAmBGnD,UAAU,CAACf,OAAX,KAAuB,KAAvB,iBACC;AAAG,QAAA,SAAS,EAAEb,OAAO,CAAC+C,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ,eAsBE,QAAC,KAAD;AACE,QAAA,GAAG,EAAEN,aADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,KAAK,EAAC,QAHR;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,OAAO,EAAEb,UAAU,CAACf,OALtB;AAME,QAAA,KAAK,EAAEe,UAAU,CAACjB,KANpB;AAOE,QAAA,QAAQ,EAAEqE,kBAPZ;AAQE,QAAA,MAAM,EAAEC;AARV;AAAA;AAAA;AAAA;AAAA,cAtBF,EAgCGjD,aAAa,CAACnB,OAAd,KAA0B,KAA1B,IAAmCU,KAAK,CAACgC,UAAzC,iBACC;AAAG,QAAA,SAAS,EAAEvD,OAAO,CAAC+C,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCJ,EAqCGf,aAAa,CAACnB,OAAd,KAA0B,KAA1B,IAAmC,CAACU,KAAK,CAACgC,UAA1C,iBACC;AAAG,QAAA,SAAS,EAAEvD,OAAO,CAAC+C,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCJ,eAwCE,QAAC,KAAD;AACE,QAAA,GAAG,EAAEL,gBADP;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,QAAA,KAAK,EAAC,UAHR;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,OAAO,EAAEV,aAAa,CAACnB,OALzB;AAME,QAAA,KAAK,EAAEmB,aAAa,CAACrB,KANvB;AAOE,QAAA,QAAQ,EAAEuE,qBAPZ;AAQE,QAAA,MAAM,EAAEC;AARV;AAAA;AAAA;AAAA;AAAA,cAxCF,EAkDG5D,KAAK,CAACgC,UAAN,IAAoBrB,eAAe,CAACrB,OAAhB,KAA4B,KAAhD,iBACC;AAAG,QAAA,SAAS,EAAEb,OAAO,CAAC+C,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnDJ,EAqDGxB,KAAK,CAACgC,UAAN,iBACC,QAAC,KAAD;AACE,QAAA,GAAG,EAAEZ,kBADP;AAEE,QAAA,EAAE,EAAC,YAFL;AAGE,QAAA,KAAK,EAAC,kBAHR;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,OAAO,EAAET,eAAe,CAACrB,OAL3B;AAME,QAAA,KAAK,EAAEqB,eAAe,CAACvB,KANzB;AAOE,QAAA,QAAQ,EAAEyE,uBAPZ;AAQE,QAAA,MAAM,EAAEC;AARV;AAAA;AAAA;AAAA;AAAA,cAtDJ,EAiEG9D,KAAK,CAACgC,UAAN,IAAoBjB,SAAS,CAACzB,OAAV,KAAsB,KAA1C,iBACC;AAAG,QAAA,SAAS,EAAEb,OAAO,CAAC+C,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlEJ,EAoEGxB,KAAK,CAACgC,UAAN,iBACC;AAAK,QAAA,SAAS,EAAExD,MAAM,CAACiH,OAAvB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,GAAG,EAAEnE,YADP;AAEE,UAAA,EAAE,EAAC,MAFL;AAGE,UAAA,KAAK,EAAC,cAHR;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,KAAK,EAAEP,SAAS,CAAC3B,KALnB;AAME,UAAA,QAAQ,EAAE6E,iBANZ;AAOE,UAAA,MAAM,EAAEC,mBAPV;AAQE,UAAA,GAAG,EAAEpF,MAAM,GAAG4G,MAAT,CAAgB,YAAhB;AARP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cArEJ,EAmFG,CAAC1F,KAAK,CAACgC,UAAP,iBACC;AAAK,QAAA,SAAS,EAAEvD,OAAO,CAACS,MAAxB;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAET,OAAO,CAACwG,GAFrB;AAGE,UAAA,QAAQ,EAAE,CAAC9E,WAAD,IAAgB,IAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cApFJ,EA+FGH,KAAK,CAACgC,UAAN,iBACC;AAAK,QAAA,SAAS,EAAEvD,OAAO,CAACS,MAAxB;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAET,OAAO,CAACwG,GAFrB;AAGE,UAAA,QAAQ,EAAE,CAAC9E,WAAD,IAAgB,IAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhGJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsHD;;GAlXQJ,K;UAGUpB,W,EACAT,W,EAiDbQ,O;;;KArDGqB,K;AAoXT,eAAeA,KAAf","sourcesContent":["import React, { useReducer, useRef, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Outlet } from \"react-router-dom\";\nimport { loginActions } from \"../../store/login-slice\";\nimport Card from \"../UI/Card/Card\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../CommonInput/Input\";\nimport styles from \"../CommonInput/Input.module.css\";\nimport classes from \"./Login.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport Modal from \"../UI/Modal\";\nimport moment from \"moment\";\n\nvar currentPassword = \"\";\n\n//************REDUCERS************//\n\nfunction emailReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isvalid: action.val.includes(\"@\") };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isvalid: state.value.includes(\"@\") };\n  }\n  if (action.type === \"CLEAR\") {\n    return { value: \"\", isvalid: null };\n  }\n\n  return { value: \"\", isvalid: false };\n}\n\nfunction passwordReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isvalid: action.val.trim().length > 6 };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isvalid: state.value.trim().length > 6 };\n  }\n  if (action.type === \"CLEAR\") {\n    return { value: \"\", isvalid: null };\n  }\n\n  return { value: \"\", isvalid: false };\n}\n\nfunction nameReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isvalid: action.val.trim() !== \"\" };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isvalid: state.value.trim() !== \"\" };\n  }\n  if (action.type === \"CLEAR\") {\n    return { value: \"\", isvalid: null };\n  }\n\n  return { value: \"\", isvalid: false };\n}\n\nfunction rePasswordReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isvalid: action.val.trim() === currentPassword.trim(),\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.trim() === currentPassword.trim(),\n    };\n  }\n  if (action.type === \"CLEAR\") {\n    return { value: \"\", isvalid: null };\n  }\n\n  return { value: \"\", isvalid: false };\n}\n\nfunction planetReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isvalid: action.val.trim() !== \"\" };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.trim() !== \"\",\n    };\n  }\n  if (action.type === \"CLEAR\") {\n    return { value: \"\", isvalid: null };\n  }\n  return { value: \"\", isvalid: false };\n}\n\nfunction dateReducer(state, action) {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isvalid: action.val.trim() !== \"\" };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isvalid: state.value.trim() !== \"\",\n    };\n  }\n  if (action.type === \"CLEAR\") {\n    return { value: \"\", isvalid: null };\n  }\n  return { value: \"\", isvalid: false };\n}\n\nfunction Login(props) {\n  //************DECLARATIONS************//\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  //STATES\n  const [formisvalid, setFormisvalid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isvalid: null,\n  });\n\n  const [nameState, dispatchName] = useReducer(nameReducer, {\n    value: \"\",\n    isvalid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isvalid: null,\n  });\n\n  const [rePasswordState, dispatchRePassword] = useReducer(rePasswordReducer, {\n    value: \"\",\n    isvalid: null,\n  });\n\n  const [planetState, dispatchPlanet] = useReducer(planetReducer, {\n    value: \"\",\n    isvalid: null,\n  });\n\n  const [dateState, dispatchDate] = useReducer(dateReducer, {\n    value: \"\",\n    isvalid: null,\n  });\n\n  //REFS\n  const nameInputRef = useRef();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const rePasswordInputRef = useRef();\n  const planetInputRef = useRef();\n  const dateInputRef = useRef();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest,\n    response,\n    resetError,\n    resetResponse,\n  } = useHttp();\n\n  //checking for form validity every 500ms\n  useEffect(\n    function () {\n      const identifier = setTimeout(() => {\n        if (props.signUpFlag) {\n          setFormisvalid(\n            nameState.isvalid &&\n              emailState.isvalid &&\n              passwordState.isvalid &&\n              rePasswordState.isvalid &&\n              planetState.isvalid &&\n              dateState.isvalid\n          );\n        } else {\n          setFormisvalid(emailState.isvalid && passwordState.isvalid);\n        }\n      }, 200);\n\n      return function clearTimer() {\n        clearTimeout(identifier);\n      };\n    },\n    //use effect dependencies - will re run every time below dependencies change.\n    //Therefore useffect is guaranteed to use the latest state.\n    [\n      nameState.isvalid,\n      emailState.isvalid,\n      passwordState.isvalid,\n      rePasswordState.isvalid,\n      planetState.isvalid,\n      dateState.isvalid,\n      props.signUpFlag,\n      formisvalid,\n    ]\n  );\n\n  //************API CALLS************//\n\n  //Request to backend for login and sign-up\n  const SignUpRequestHandler = async (requestJson) => {\n    sendTaskRequest({\n      url: \"https://space-ticket-booking-java.herokuapp.com/api/protected/loginAuth\",\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: {\n        name: requestJson.enteredName,\n        email: requestJson.enteredEmail,\n        password: requestJson.enteredPassword,\n        rePassword: requestJson.enteredRePassword,\n        dob: requestJson.enteredDate,\n        signUpF: requestJson.signUpFlag,\n      },\n      errorMsg: \"Request failed!\",\n    });\n  };\n\n  //************STATE HANDLERS************//\n\n  function nameChangeHandler(event) {\n    dispatchName({ type: \"USER_INPUT\", val: event.target.value });\n  }\n  function validateNameHandler() {\n    dispatchName({ type: \"INPUT_BLUR\" });\n  }\n  function emailChangeHandler(event) {\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n  }\n  function validateEmailHandler() {\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  }\n  function passwordChangeHandler(event) {\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n    currentPassword = event.target.value;\n  }\n  function validatePasswordHandler() {\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n  }\n  function rePasswordChangeHandler(event) {\n    dispatchRePassword({ type: \"USER_INPUT\", val: event.target.value });\n  }\n  function validateRePasswordHandler() {\n    dispatchRePassword({ type: \"INPUT_BLUR\" });\n  }\n  function planetChangeHandler(event) {\n    dispatchPlanet({ type: \"USER_INPUT\", val: event.target.value });\n  }\n  function validatePlanetHandler() {\n    dispatchPlanet({ type: \"INPUT_BLUR\" });\n  }\n  function dateChangeHandler(event) {\n    dispatchDate({ type: \"USER_INPUT\", val: event.target.value });\n  }\n  function validateDateHandler() {\n    dispatchDate({ type: \"INPUT_BLUR\" });\n  }\n\n  //************ACTION HANDLERS************//\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    if (props.signUpFlag) {\n      const enteredName = nameState.value;\n      const enteredEmail = emailState.value;\n      const enteredPassword = passwordState.value;\n      const enteredRePassword = rePasswordState.value;\n      const enteredPlanet = planetState.value;\n      const enteredDate = dateState.value;\n\n      if (formisvalid) {\n        const requestJson = {\n          enteredName,\n          enteredEmail,\n          enteredPassword,\n          enteredRePassword,\n          enteredPlanet,\n          enteredDate,\n          signUpFlag: \"Y\",\n        };\n\n        SignUpRequestHandler(requestJson);\n        setFormisvalid(false);\n        props.postSignUp();\n        dispatchName({ type: \"CLEAR\" });\n        dispatchEmail({ type: \"CLEAR\" });\n        dispatchPassword({ type: \"CLEAR\" });\n        dispatchRePassword({ type: \"CLEAR\" });\n        dispatchPlanet({ type: \"CLEAR\" });\n        dispatchDate({ type: \"CLEAR\" });\n      }\n    } else {\n      const enteredEmail = emailState.value;\n      const enteredPassword = passwordState.value;\n\n      if (formisvalid) {\n        const requestJson = {\n          enteredEmail,\n          enteredPassword,\n          signUpFlag: \"N\",\n        };\n\n        SignUpRequestHandler(requestJson);\n        setFormisvalid(false);\n        dispatchEmail({ type: \"CLEAR\" });\n        dispatchPassword({ type: \"CLEAR\" });\n      }\n    }\n  }\n  function closeErrorModal() {\n    resetError();\n    resetResponse();\n  }\n\n  if (response.responseCode === 0) {\n    dispatch(loginActions.LoginStateHandler());\n    dispatch(loginActions.UpdateUserId(response.userId));\n    localStorage.setItem(\"isLoggedIn\", 1);\n    localStorage.setItem(\"userId\", response.userId);\n    closeErrorModal();\n  }\n\n  useEffect(() => {\n    if (props.loginF) {\n      navigate(\"/login\");\n    }\n  }, [props.loginF, navigate]);\n\n  //************MODALS************//\n\n  const modalActions = (\n    <div className={classes.actions}>\n      <Button className={classes.btn} onClick={closeErrorModal}>\n        Close\n      </Button>\n    </div>\n  );\n\n  const loginModalContent = (\n    <React.Fragment>\n      <div className={classes.total}>\n        <span>{response.responseMessage}</span>\n      </div>\n    </React.Fragment>\n  );\n\n  //************LOADING SPINNERS************//\n\n  if (isLoading) {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  return (\n    <Card className={classes.login}>\n      {(error || response.responseCode !== undefined) && (\n        <Modal onClose={props.onClose}>\n          {loginModalContent}\n          {modalActions}\n        </Modal>\n      )}\n      <form onSubmit={submitHandler}>\n        {props.sessionTimeout && (\n          <p className={classes.error}>Session Expired! Please login again.</p>\n        )}\n        {props.signUpFlag && nameState.isvalid === false && (\n          <p className={classes.error}>Name cannot be empty!</p>\n        )}\n        {props.signUpFlag && (\n          <Input\n            ref={nameInputRef}\n            id=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            isvalid={nameState.isvalid}\n            value={nameState.value}\n            onChange={nameChangeHandler}\n            onBlur={validateNameHandler}\n          />\n        )}\n        {emailState.isvalid === false && (\n          <p className={classes.error}>Invalid E-Mail</p>\n        )}\n        <Input\n          ref={emailInputRef}\n          id=\"email\"\n          label=\"E-Mail\"\n          type=\"email\"\n          isvalid={emailState.isvalid}\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n        {passwordState.isvalid === false && props.signUpFlag && (\n          <p className={classes.error}>\n            Password should be greater than 6 characters!\n          </p>\n        )}\n        {passwordState.isvalid === false && !props.signUpFlag && (\n          <p className={classes.error}>Invalid Password</p>\n        )}\n        <Input\n          ref={passwordInputRef}\n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          isvalid={passwordState.isvalid}\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n        {props.signUpFlag && rePasswordState.isvalid === false && (\n          <p className={classes.error}>Passwords do not match!</p>\n        )}\n        {props.signUpFlag && (\n          <Input\n            ref={rePasswordInputRef}\n            id=\"rePassword\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            isvalid={rePasswordState.isvalid}\n            value={rePasswordState.value}\n            onChange={rePasswordChangeHandler}\n            onBlur={validateRePasswordHandler}\n          />\n        )}\n        {props.signUpFlag && dateState.isvalid === false && (\n          <p className={classes.error}>Please select your D.O.B</p>\n        )}\n        {props.signUpFlag && (\n          <div className={styles.control}>\n            <label htmlFor=\"date\">Date of Birth</label>\n            <input\n              ref={dateInputRef}\n              id=\"date\"\n              label=\"Journey Date\"\n              type=\"date\"\n              value={dateState.value}\n              onChange={dateChangeHandler}\n              onBlur={validateDateHandler}\n              max={moment().format(\"YYYY-MM-DD\")}\n            ></input>\n          </div>\n        )}\n        {!props.signUpFlag && (\n          <div className={classes.action}>\n            <Button\n              type=\"submit\"\n              className={classes.btn}\n              disabled={!formisvalid && true}\n            >\n              Sign in\n            </Button>\n            <Outlet />\n          </div>\n        )}\n        {props.signUpFlag && (\n          <div className={classes.action}>\n            <Button\n              type=\"submit\"\n              className={classes.btn}\n              disabled={!formisvalid && true}\n            >\n              Sign up\n            </Button>\n            <Outlet />\n          </div>\n        )}\n      </form>\n    </Card>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}